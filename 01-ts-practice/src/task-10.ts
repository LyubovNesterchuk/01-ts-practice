const users:string[] = ["alice", "bob", "charlie"];


// 1. –°—Ç–≤–æ—Ä—ñ—Ç—å —Ç–∏–ø—ñ–∑–æ–≤–∞–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é toUserObjects, —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ —Ä—è–¥–∫—ñ–≤ (—ñ–º–µ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤).
// 2. –£—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –ø–µ—Ä–µ–±–µ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ —ñ–º–µ–Ω —Ç–∞ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —ñ–º–µ–Ω—ñ —Å—Ç–≤–æ—Ä–∏ –æ–±‚Äô—î–∫—Ç –∑ —Ç–∞–∫–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏:
// id ‚Äî –ø–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä (–ø–æ—á–∏–Ω–∞—é—á–∏ –∑ 1),
// name ‚Äî —Å–∞–º–µ —ñ–º‚Äô—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (—Ä—è–¥–æ–∫ –∑ –º–∞—Å–∏–≤—É)

type UserObject = {
  id: number;
  name: string;
};

function toUserObjects(users: string[]): UserObject[] {
  return users.map((name, index) => ({
    id: index + 1,
    name,
  }));
}


// 3. –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –º–∞—Å–∏–≤ –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –æ–±‚Äô—î–∫—Ç—ñ–≤.
// 4. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü—ñ—ó –º–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω—É —Ç–∏–ø—ñ–∑–∞—Ü—ñ—é, –∞ TypeScript –Ω–µ –≤–∏–¥–∞—î –ø–æ–º–∏–ª–æ–∫.

const userObjects = toUserObjects(users);

console.log(userObjects);
// üëâ [{ id: 1, name: "alice" }, { id: 2, name: "bob" }, { id: 3, name: "charlie" }]


